@using Microsoft.AspNet.Identity
@model FW2017.Models.PortfolioData
@{
    ViewBag.Title = "Edit";
    var status = ViewBag.status;
    var portfolio_cat1 = ViewBag.portfolio_cat1;
    var portfolio_cat2 = ViewBag.portfolio_cat2;
    var portfolio_cat3 = ViewBag.portfolio_cat3;
}
<section class="section-container">
    <!-- Page content-->
    <div class="content-wrapper">
        <div class="content-heading">
            <div>
                編輯作品資料
                <small></small>
            </div>
        </div>
        <!-- START row-->
        <div class="row">
            <div class="col-xl-12">
                <form method="post" data-parsley-validate="" novalidate="" enctype="multipart/form-data">
                    <!-- START card-->
                    <div class="card card-default">
                        <div class="card-header">
                            <div class="card-title">
                                作品資料
                                <span class="required small ml-4 text-danger">* 必填欄位</span>
                            </div>
                            @Html.HiddenFor(model => model.id)
                            @Html.AntiForgeryToken()
                        </div>
                        <div class="card-body">
                            <input type="text" name="editor" value="@User.Identity.GetUserName()" style="display:none">
                            <div class="form-group row">
                                <label class="col-md-2 col-form-label">是否顯示</label>
                                <div class="col-md-10">
                                    <label class="switch switch-lg">
                                        <input type="checkbox" id="is_show" name="is_show" value=@Model.is_show.ToString()>
                                        <span></span>
                                    </label>
                                </div>
                            </div>
                            <div class="form-group row">
                                <label class="col-md-2 col-form-label">是否放置首頁</label>
                                <div class="col-md-10">
                                    <label class="switch switch-lg">
                                        <input type="checkbox" id="is_homepage" name="is_homepage" value=@Model.is_homepage.ToString()>
                                        <span></span>
                                    </label>
                                    @Html.ValidationMessageFor(model => model.is_homepage)
                                </div>
                            </div>
                            <div class="form-group row">
                                <div class="col-md-6 mb-3">
                                    <label class="col-form-label"><span class="text-danger">*</span>上架日期</label>
                                    <div class="input-group date" id="datetimepicker1">
                                        @if (@Model.add_date != null)
                                        {
                                            <input class="form-control" name="add_date" type="text" value=@DateTime.Parse((Convert.ToString(@Model.add_date))).ToString("yyyy/MM/dd") autocomplete="off">
                                        }
                                        else
                                        {
                                            <input class="form-control" name="add_date" type="text" value=@DateTime.Now.ToString("yyyy/MM/dd") autocomplete="off">
                                        }
                                        <span class="input-group-append input-group-addon">
                                            <span class="input-group-text fas fa-calendar-alt"></span>
                                        </span>
                                    </div>
                                </div>
                                <div class="col-md-6 mb-3">
                                    <label class="col-form-label">下架日期</label>
                                    <div class="input-group date" id="datetimepicker2">
                                        @if (@Model.remov_date != null)
                                        {
                                            <input class="form-control" name="remov_date" type="text" value=@DateTime.Parse((Convert.ToString(@Model.remov_date))).ToString("yyyy/MM/dd") autocomplete="off">
                                        }
                                        else
                                        {
                                            <input class="form-control" name="remov_date" type="text" autocomplete="off">
                                        }
                                        <span class="input-group-append input-group-addon">
                                            <span class="input-group-text fas fa-calendar-alt"></span>
                                        </span>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group row">
                                <div class="col-lg-4 mb-3">
                                    <label class="col-form-label">*作品名稱</label>
                                    @Html.EditorFor(model => model.portfolio_name, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.portfolio_name, null, new { @class = "text-danger" })
                                </div>
                                <div class="col-lg-4 mb-3">
                                    <label class="col-form-label">作品編號_公共藝術網</label>
                                    @Html.EditorFor(model => model.portfolio_number, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.portfolio_number, null, new { @class = "text-danger" })
                                </div>
                                <div class="col-lg-4 mb-3">
                                    <label class="col-form-label">作品狀態</label>
                                    <select class="form-control" name="portfolio_status">
                                        @foreach (var item in status)
                                        {
                                            <option value=@item.ToString() @(Model.portfolio_status == item.ToString() ? "selected" : "")>@item.ToString()</option>
                                        }
                                    </select>
                                </div>
                            </div>
                            <div class="form-group row">
                                <div class="col-md-4 mb-3">
                                    <label class="col-form-label">分類1</label>
                                    <select class="form-control" name="portfolio_cat1">
                                        @foreach (var item in portfolio_cat1)
                                        {
                                            <option value=@item.ToString() @(Model.portfolio_cat1.Trim() == item.ToString() ? "selected" : "")>@item.ToString()</option>
                                        }
                                    </select>
                                </div>
                                <div class="col-md-4 mb-3">
                                    <label class="col-form-label">分類2</label>
                                    <select class="form-control" name="portfolio_cat2">
                                        @foreach (var item in portfolio_cat2)
                                        {
                                            <option value=@item.ToString() @(Model.portfolio_cat2.Trim() == item.ToString() ? "selected" : "")>@item.ToString()</option>
                                        }
                                    </select>
                                </div>
                                <div class="col-md-4 mb-3">
                                    <label class="col-form-label">分類3</label>
                                    <select class="form-control" name="portfolio_cat3">
                                        @foreach (var item in portfolio_cat3)
                                        {
                                            <option value=@item.ToString() @(Model.portfolio_cat3.Trim() == item.ToString() ? "selected" : "")>@item.ToString()</option>
                                        }
                                    </select>
                                </div>
                            </div>
                            <div class="form-group row">
                                <div class="col-md-4 mb-3">
                                    <label class="col-form-label">創作時間</label>
                                    <select class="form-control" name="create_year">
                                        @{
                                            var nyear = DateTime.Now.Year;
                                            for (int i = DateTime.Now.Year - 30; i <= DateTime.Now.Year; i++)
                                            {
                                                <option value=@i @(Model.create_year == i.ToString() ? "selected" : "")>@i</option>
                                            }
                                        }
                                    </select>
                                </div>
                                <div class="col-md-8 mb-3">
                                    <label class="col-form-label">創作者</label>
                                    @Html.EditorFor(model => model.creator, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.creator, null, new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group row">
                                <div class="col-lg-4 mb-3">
                                    <label class="col-form-label">尺吋</label>
                                    @Html.EditorFor(model => model.portfolio_size, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.portfolio_size, null, new { @class = "text-danger" })
                                </div>
                                <div class="col-lg-4 mb-3">
                                    <label class="col-form-label">材質</label>
                                    @Html.EditorFor(model => model.portfolio_made_of, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.portfolio_made_of, null, new { @class = "text-danger" })
                                </div>
                                <div class="col-lg-4 mb-3">
                                    <label class="col-form-label">設置地點</label>
                                    @Html.EditorFor(model => model.portfolio_place, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.portfolio_place, null, new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group row">
                                <div class="col-md-6 mb-3">
                                    <label class="col-form-label">緯度</label>
                                    @Html.EditorFor(model => model.latitude, new { htmlAttributes = new { @class = "form-control", @id = "latclicked" } })
                                    @Html.ValidationMessageFor(model => model.latitude, null, new { @class = "text-danger" })
                                </div>
                                <div class="col-md-6 mb-3">
                                    <label class="col-form-label">經度</label>
                                    @Html.EditorFor(model => model.longitude, new { htmlAttributes = new { @class = "form-control", @id = "longclicked" } })
                                    @Html.ValidationMessageFor(model => model.longitude, null, new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                <div id="map" style="height: 500px; border: 1px solid #AAA;"></div>
                            </div>
                            <div class="form-group row">
                                <div class="col-md-6 mb-3">
                                    <label class="col-form-label">作品主圖 <span class="text-danger">請勿超過600KB</span></label>
                                    <br />
                                    @if (Model.portfolio_Img != null)
                                    {
                                        <img src="@Url.Content(Model.portfolio_Img)" alt="Image" id="Img" class="col-md-4 col-12" />
                                    }
                                    <input class="form-control filestyle" type="file" name="ImgFile" id="imgInp">
                                    <img id="blah" src="#" alt="image" style="display:none" class="col-md-6 col-12" />
                                </div>
                                <div class="col-md-6 mb-3"></div>

                            </div>
                            <div class="form-group row">
                                <div class="col-md-6 mb-3">
                                    <label class="col-form-label">作品介紹（影片)(崁入Youtube網址連結)</label>
                                    <div class="input-group">
                                        <div class="input-group-prepend">
                                            <span class="input-group-text" id="basic-addon3">https://youtu.be/</span>
                                        </div>
                                        @Html.EditorFor(model => model.portfolio_vedio, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.portfolio_vedio, null, new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-6 mb-3">
                                    <label class="col-form-label">作品介紹是否放置首頁</label>
                                    <label class="switch switch-lg">
                                        <input type="checkbox" checked="checked" id="is_vedionpage" name="is_vedionpage" value=@Model.is_vedionpage.ToString()>
                                        <span></span>
                                    </label>
                                    @Html.ValidationMessageFor(model => model.is_vedionpage)
                                </div>
                            </div>
                            <div class="form-group row">
                                <div class="col-md-6 mb-3">
                                    <label class="col-form-label">作品說明_聲音_mp3檔案上傳</label>
                                    @if (Model.portfolio_mp3 != null)
                                    {
                                        <article class="audio">
                                            <audio controls>
                                                <source src=@Url.Content(Model.portfolio_mp3) type="audio/mp3" />
                                                <p>Your browser does not support HTML 5 audio element</p>
                                            </audio>
                                        </article>
                                    }
                                    <input class="form-control" type="file" name="mp3File" id="mp3File">
                                    @Html.ValidationMessageFor(model => model.portfolio_mp3, null, new { @class = "text-danger" })
                                </div>
                                <div class="col-md-6 mb-3">
                                    <label class="col-form-label">作品說明是否放置首頁</label>
                                    <label class="switch switch-lg">
                                        <input type="checkbox" checked="checked" id="is_mp3onpage" name="is_mp3onpage" value=@Model.is_mp3onpage.ToString()>
                                        <span></span>
                                    </label>
                                    @Html.ValidationMessageFor(model => model.is_mp3onpage)
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-form-label">作品說明</label>
                                @Html.TextAreaFor(model => model.portfolio_des2, new { @class = "form-control", @rows = 8 })
                                @Html.ValidationMessageFor(model => model.portfolio_des2, null, new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                <label class="col-form-label">策畫理念</label>
                                @Html.TextAreaFor(model => model.portfolio_des1, new { @class = "form-control", @rows = 8 })
                                @Html.ValidationMessageFor(model => model.portfolio_des1, null, new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="card-footer">
                            @Html.ActionLink("取消", "Index", "Portfolio", null, new { @class = "btn btn-secondary btn-large" })
                            <button class="btn btn-success" type="submit">儲存</button>
                        </div>
                    </div>
                    <!-- END card-->
                </form>
            </div>
        </div>
        <!-- END row-->
    </div>
</section>

@section Scripts{
    <script src="~/Content/admin/vendor/bootstrap-filestyle/src/bootstrap-filestyle.js"></script>
    <!-- sweetalert-->
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <script src="~/Scripts/bootstrap.js"></script>
    <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
    <link rel="stylesheet" href="~/Content/sweetalert/sweet-alert.css" />

    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.3.4/dist/leaflet.css" integrity="sha512-puBpdR0798OZvTTbP4A8Ix/l+A4dHDD0DGqYW6RQ+9jxkRFclaxxQb/SJAWZfWAkuyeQUytO7+7N4QKrDh+drA==" crossorigin="" />
    <script src="https://unpkg.com/leaflet@1.3.4/dist/leaflet.js" integrity="sha512-nMMmRyTVoLYqjP9hrbed9S+FzjZHW5gY1TWCHA5ckwXZBadntCNs8kEqAWdrb9O7rxbCaA4lKTIWjDXZxflOcA==" crossorigin=""></script>

    <script>
        $(document).ready(function () {
            console.log($('#is_show').val().toString() == "True");
            if ($('#is_show').val().toString() == "True") {
                $('#is_show').prop('checked', true)
            } else {
                $('#is_show').prop('checked', false)
            }
            if ($('#is_homepage').val().toString() == "True") {
                $('#is_homepage').prop('checked', true)
            } else {
                $('#is_homepage').prop('checked', false)
            }
            if ($('#is_vedionpage').val().toString() == "True") {
                $('#is_vedionpage').prop('checked', true)
            } else {
                $('#is_vedionpage').prop('checked', false)
            }
            if ($('#is_mp3onpage').val().toString() == "True") {
                $('#is_mp3onpage').prop('checked', true)
            } else {
                $('#is_mp3onpage').prop('checked', false)
            }

            $('#datetimepicker1').datepicker({
                format: 'yyyy/mm/dd',
                orientation: 'bottom',
                startDate: '1970/01/01',
                icons: {
                    time: 'fa fa-clock-o',
                    date: 'fa fa-calendar',
                    up: 'fa fa-chevron-up',
                    down: 'fa fa-chevron-down',
                    previous: 'fa fa-chevron-left',
                    next: 'fa fa-chevron-right',
                    today: 'fa fa-crosshairs',
                    clear: 'fa fa-trash'
                }
            });

            $('#datetimepicker2').datepicker({
                format: 'yyyy/mm/dd',
                orientation: 'bottom',
                startDate: '1970/01/01',
                icons: {
                    time: 'fa fa-clock-o',
                    date: 'fa fa-calendar',
                    up: 'fa fa-chevron-up',
                    down: 'fa fa-chevron-down',
                    previous: 'fa fa-chevron-left',
                    next: 'fa fa-chevron-right',
                    today: 'fa fa-crosshairs',
                    clear: 'fa fa-trash'
                }
            });

            function readURL(input) {
                if (input.files && input.files[0]) {
                    var reader = new FileReader();
                    reader.onload = function (e) {
                        $('#blah').attr('src', e.target.result);
                        $('#blah').show();
                        $('#Img').hide();

                    }
                    reader.readAsDataURL(input.files[0]);
                }
            }

            $("#imgInp").change(function () {
                readURL(this);
                $('#blah').show();
                $('#Img').hide();
            });

            $('#is_show').on('change', function () {
                if ($(this).attr('checked')) {
                    $('#is_show').val(this.checked);
                } else {
                    $('#is_show').val(this.checked);
                }
            });

            $('#is_homepage').on('change', function () {
                if ($(this).is(':checked')) {
                    $('#is_homepage').val(this.checked);
                } else {
                    $('#is_homepage').val(this.checked);
                }
                console.log($('#is_homepage').val());
            });

            $('#is_vedionpage').on('change', function () {
                if ($(this).is(':checked')) {
                    $('#is_vedionpage').val(this.checked);
                } else {
                    $('#is_vedionpage').val(this.checked);
                }
            });

            $('#is_mp3onpage').on('change', function () {
                if ($(this).is(':checked')) {
                    $('#is_mp3onpage').val(this.checked);
                } else {
                    $('#is_mp3onpage').val(this.checked);
                }
            });

            var res =@(Html.Raw(Json.Encode(TempData["Message"])));
            console.log(res);
            if (res != null) {
                swal(res);
            }

            var map;
            var marker;
            var lat = 25.0248949;
            var lng = 121.5255704;

            if ($("#latclicked").val() != "") {
                lat = $("#latclicked").val();
            }

            if ($("#longclicked").val() != "") {
                lng = $("#longclicked").val(); 
            }           
               
            console.log("lat:", lat,"lng:", lng);
            map = L.map('map').setView([lat, lng], 14);
            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                attribution: '<a href="https://www.openstreetmap.org/">OSM</a>',
                maxZoom: 18,
            }).addTo(map); 

            //mouse wheel disabled
            map.scrollWheelZoom.disable();

            if (lat != 25.0248949 && lng != 121.5255704) {
                marker = L.marker([lat, lng]);
                marker.addTo(map);
            }    
            
            map.on('click', function (e) {

                var lat=$("#latclicked").val();
                var lon = $("#longclicked").val();
              
                if (lat != "" && lon != "") {
                    deleteMarkers();
                }                
                //alert("Lat, Lon : " + e.latlng.lat + ", " + e.latlng.lng)
                $("#latclicked").val(e.latlng.lat);
                $("#longclicked").val(e.latlng.lng);
               
                marker = L.marker([e.latlng.lat, e.latlng.lng]);
                marker.addTo(map);
            });

            //移除的函式
            function deleteMarkers() {
                map.removeLayer(marker);
            }

        });
    </script>
}